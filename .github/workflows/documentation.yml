name: Documentation CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-docs:
    name: Lint Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm install -g markdownlint-cli
        npm install -g alex
        
    - name: Lint Markdown files
      run: markdownlint "docs/**/*.md" "guides/**/*.md" "*.md"
      
    - name: Check for insensitive language
      run: alex "docs/**/*.md" "guides/**/*.md" "*.md" --quiet
      
    - name: Validate code examples
      run: |
        # Check JavaScript examples
        find examples/javascript -name "*.js" -exec node -c {} \;
        
        # Check Python syntax
        find examples/python -name "*.py" -exec python -m py_compile {} \;
        
        # Check PHP syntax
        find examples/php -name "*.php" -exec php -l {} \;

  validate-links:
    name: Validate Links
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install markdown-link-check
      run: npm install -g markdown-link-check
      
    - name: Check links in documentation
      run: |
        find . -name "*.md" -not -path "./node_modules/*" | xargs markdown-link-check --config .github/markdown-link-check.json

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        
    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: [lint-docs, validate-links]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build documentation site
      run: |
        # Add build commands here when using a static site generator
        echo "Documentation ready for deployment"
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
        exclude_assets: '.github,node_modules,.gitignore'